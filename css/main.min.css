/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:Roboto;src:url(../fonts/Roboto-regular.ttf) format("truetype");font-family:Roboto-bold;src:url(../fonts/Roboto-Bold.ttf) format("truetype");font-family:"Deja Vu Sans";src:url(../fonts/DejaVuSans.ttf) format("truetype");font-family:"Hitch Hike";src:url(../fonts/Hitchhike.ttf) format("truetype")}*{font-family:Roboto,sans-serif}.container-fluid{width:95%;max-width:1200px}a{text-decoration:none}a:hover{cursor:pointer;text-decoration:none}button{outline:0}button:hover{outline:0}button:active{outline:0}ul{list-style:none;padding:0}li{display:inline-block}h2{font-size:36px;color:#1cc4bf;text-align:center;border-bottom:2px dashed #f5cd15;display:inline-block;margin:0 auto}.in-col{box-shadow:8.045px 7.502px 7px rgba(0,0,0,.05);background-color:#fff;padding-bottom:25px;padding-top:10px}.in-col:hover{box-shadow:8.045px 7.502px 7px rgba(0,0,0,.25)}div.img_round{height:124px;width:124px;overflow:hidden;border-radius:50%;box-shadow:3.5px 6.062px 1px rgba(34,31,31,.26);background-color:#fff;margin:0 auto}.logo{display:inline-block;padding:0}.logo img{max-height:70px}.dropdown-menu{width:273px;box-shadow:4px 6.928px 3px rgba(0,0,0,.14);background-color:#fff;padding:10px}.dropdown-menu li{padding:0;margin:0;display:block}.dropdown-menu .dropdownMenuItem{border:none;background-color:transparent;font-size:10px;line-height:23px;color:#051241;text-align:center;text-transform:uppercase}.dropdown-menu .dropdownMenuItem:hover{color:#00aef3;border-bottom:1px solid #00aef3}.img-fixed-height{display:inline-block;height:100%;width:auto;border:.5px solid #d3d3d3}.countries li{margin-bottom:15px}.countries li:last-child{margin-bottom:0}.countries .row-flag .country-flag{display:inline-block;width:45%;height:25px}.countries .row-flag .country-flag span{font-size:10px;line-height:25px;color:#051241;text-transform:uppercase}header .contacts{background-color:#4b4b4b}header .contacts span{font-size:16px;line-height:55px;color:#fff;margin-right:10px}header .menu{background-color:#47d0cc;margin-bottom:0;border:none;min-height:80px}header .menu .nav{min-height:80px}header .menu .nav>li{padding-top:15px;margin-right:20px}header .menu .nav>li:last-child{margin-right:0}header .menu .nav>li:hover{border-bottom:6px solid #fede0c;-o-border-image:url(../img/hover_line.png) 0 0 10 stretch;border-image:url(../img/hover_line.png) 0 0 10 stretch}header .menu .nav>li a{line-height:25px;font-size:20px;color:#fff;font-weight:700;padding-bottom:1px}header .menu .nav>li a:hover{color:#fff}header .banner{text-transform:uppercase;background:url(../img/bg_header.jpg) no-repeat;background-size:cover;color:#fff;padding:170px 0 95px}header .banner h4{font-size:23rem;font-family:"Hitch Hike";color:#fff}header .banner p{font-size:40px}header .banner #myModal .modal-dialog{position:relative;border:none;padding:0}header .banner #myModal .modal-dialog .close{position:absolute;top:-55px;right:-55px}header .banner #myModal .modal-dialog .modal-body{width:48%;margin-left:52%;text-align:center;padding:50px}header .banner #myModal .modal-dialog .modal-body h6{font-size:60px;color:#093546;text-transform:none;margin-bottom:20px}header .banner #myModal .modal-dialog .modal-body p{font-size:22px;line-height:23px;color:#3f3f3f;margin-bottom:30px;text-transform:none}header .banner #myModal .modal-dialog .modal-body form input{font-size:18px;line-height:23px;color:#000;width:299px;height:49px;background-color:#fdfeff;margin:0 auto 30px}header .banner #myModal .modal-dialog .modal-body form button{width:250px;height:67px;background-color:#2391ed;text-transform:uppercase;font-size:22px;letter-spacing:4px;line-height:55px;color:#fff;text-align:center}header .banner #myModal .modal-dialog .modal-body form button:hover{font-weight:700;background-color:#f6ce15}header .banner #myModal .modal-content.dispatch{background:#6dcff6 url(../img/bg_modal_banner.jpg) no-repeat;background-size:contain;max-width:992px;height:400px;margin-top:60px}header .banner .modalBanner{width:200px;height:67px;display:block;box-shadow:5px 8.66px 1px rgba(34,31,31,.15);background-color:#f5cd15;font-size:20px;letter-spacing:2px;line-height:55px;color:#000;font-weight:700;text-align:center;margin:0 auto}header .banner .modalBanner:hover{background-color:#47cfcb;color:#fff;text-decoration:none}.img_round img{max-height:100%;width:auto;display:block}.advantages{padding:0}.advantages .carousel-indicators li{border:1px solid #47cfcb}.advantages .carousel-indicators .active{background-color:#47cfcb}.advantages .slide{padding:10px 0 30px;background:#fff}.advantages h6{margin:40px 0 20px;font-size:24px;color:#000;font-weight:700;text-align:center;text-transform:uppercase}.advantages p{font-size:18px;line-height:24px;color:#767474;text-align:center;max-width:70%;margin:0 auto}.statistic{color:#767474;text-align:center;background-image:url(../img/bg_statistic.png);background-size:cover}.statistic p.num{font-size:60px;color:#4b4b4b;font-weight:700}.statistic p.text{font-size:24px;font-weight:800}.hotels{text-align:center;background:url(../img/bg_hotels.png) no-repeat;background-size:cover;padding:80px 0 60px}.hotels .row .col-sm-4{background:0 0}.hotels .in-col{margin-bottom:40px}.hotels div{text-align:center}.hotels h2{font-size:36px;color:#1cc4bf;text-align:center;text-transform:uppercase;margin-bottom:50px}.hotels h5{margin:25px 0 15px;font-size:24px;color:#000;text-align:center;text-transform:uppercase}.hotels span{font-size:24px;color:#e49c0e}.hotels .stars{margin-bottom:25px}.hotels .stars i{font-size:18px;line-height:24px;color:#f9ab14}.hotels .img{height:250px;overflow:hidden}.hotels .img img{display:block;max-height:100%;width:auto;margin:0 auto}.hotels button.btn{width:167px;height:40px;box-shadow:3.5px 6.062px 1px rgba(34,31,31,.15);background-color:#f5cd15;outline:0;border:none;font-size:18px;letter-spacing:2px;line-height:28px;color:#000;text-align:center;display:block;margin:0 auto}.hotels button.btn:hover{background-color:#47cfcb;color:#fff;outline:0;border:none}.reviews{text-align:center;padding:95px 0 65px}.reviews h2{margin-bottom:30px;text-transform:uppercase}.reviews .img-responsive{max-width:none;max-height:100%}.reviews .quotes{max-width:35px;position:absolute;top:0;right:25%}.reviews p{font-size:18px}.reviews .name{color:#1cc4bf;margin:25px 0 10px}.reviews .review{color:#767474}.modal-dialog{max-width:475px}.ask-call{padding:25px 45px 45px}.ask-call form div{text-align:left}.ask-call form div input{border:1px solid #47cfcb;color:#000}.ask-call form div input:hover{box-shadow:3.5px 6.062px 1px rgba(71,207,203,.15)}.ask-call h5{font-size:24px;line-height:23px;text-transform:uppercase;color:#000;text-align:center;margin-bottom:30px}.ask-call p{font-size:16px;line-height:24px;color:#767474;text-align:center;margin-bottom:40px}.ask-call button{margin:0 auto;width:170px;height:40px;background-color:#f9d166;line-height:40px;text-transform:uppercase;display:block}.ask-call label{font-size:12px;line-height:23px;color:#082a98}.company{text-align:right;background-image:url(../img/bg_company_foto.jpg);background-size:cover}.company .target{text-align:center;padding:50px 60px 50px 0;background-image:url(../img/yellow_white.png);background-size:cover}.company .target h2{line-height:48px;color:#846e0a;margin-left:30%;margin-bottom:30px;border:none}.company .target .main-text{font-size:30px;line-height:36px;color:#8c4e0b;text-align:center;margin-left:20%;margin-bottom:30px}.company .target .light-yelow-btn{outline:0;border:none;display:block;margin-left:50%;width:200px;height:55px;box-shadow:3.5px 6.062px 1px rgba(34,31,31,.15);background-color:#fbedaf;font-size:18px;letter-spacing:2px;line-height:38px;color:#000;text-align:center}.company .target .light-yelow-btn:hover{background-color:#47cfcb;color:#fff}.news{padding:100px 0 50px;text-align:center}.news .col-sm-4{padding-bottom:10px}.news h2{margin-bottom:30px;text-transform:uppercase}.news .sponsor{padding-top:65px}.news .sponsor div{margin-bottom:15px}.news .sponsor div img{margin:0 auto}.news .in-col{height:450px;text-align:left}.news .in-col .text_news{font-size:14px;line-height:18px;color:#767474}.news .in-col h5{font-size:18px;line-height:24px;color:#000}.news .in-col .data{margin-top:15px;font-size:12px;line-height:18px;color:#000}#modalOpenNews{display:none;position:fixed;top:0;bottom:0;left:0;right:0;background-color:rgba(209,209,209,.9)}#modalOpenNews .modal-body{max-width:80%;max-height:90vh;overflow-y:scroll;position:absolute;top:10px;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);border:2px solid gray;background:#fff;padding:30px}#modalOpenNews .modal-body h2{border:none;margin-bottom:30px;font-size:20px}#modalOpenNews .modal-body p{font-size:14px;margin-bottom:30px}#modalOpenNews .modal-body #newsData{font-style:italic;font-weight:700}footer{text-align:center;background-color:#73c1bf;padding:55px 0 130px}footer .logo{padding-bottom:20px}footer .logo p{font-size:18px;line-height:26px;color:#194d4c;margin:25px 0 30px}footer .logo a{display:inline-block;text-decoration:none;color:#407978;margin-right:15px}footer .logo a:hover{color:#1769ff}footer .logo a i{font-size:35px;line-height:35px}footer .adress p{font-size:24px;line-height:1.2;color:#407978}footer #map{width:88%;height:234px;background-color:#fff;margin:35px auto 0}footer .form{text-align:center;background-color:#fff;padding:15px;margin-top:45px}footer .form p{margin:30px 0}footer .form button{width:170px;height:40px;box-shadow:3.5px 6.062px 1px rgba(34,31,31,.15);background-color:#f5cd15;font-size:16px;letter-spacing:2px;line-height:40px;text-transform:uppercase;color:#000;font-weight:700;margin-top:30px}footer .form button:hover{background-color:#47cfcb;color:#fff;text-decoration:none}footer .form h5{font-size:24px;letter-spacing:1px;color:#000}footer .form p{font-size:16px;line-height:18px;color:#767474}.copyright{height:85px;line-height:85px;background-color:#3e3e3e;font-size:24px;color:#767676;text-align:center}@media all and (min-width:1600px){.company .target{margin-left:42%;width:58%}}@media all and (max-width:1565px){.company .target h2{margin-left:40%;font-size:32px}.company .target .main-text{margin-left:30%;font-size:25px}}@media all and (max-width:1200px){.hotels h5{font-size:18px}header .menu .nav{padding-right:0}header .menu .nav li a{line-height:20px;font-size:15px;color:#fff;font-weight:400;padding-bottom:1px}header .menu .nav li a:hover{color:#fff}header .banner #myModal .modal-dialog .modal-body{width:100%;margin-left:0}header .banner #myModal .modal-content.dispatch{background-color:#6dcff6;background-image:none}}@media all and (max-width:950px){.company{background-image:none}.company .target{background-color:#fcd72a;background-image:none;padding:15px}.company .target .main-text,.company .target a,.company .target h2{margin:0 auto 30px}footer{padding:50px 0 50px}header .menu{text-align:center}header .menu .navbar-header{float:none;text-align:center}header .menu .navbar-header .navbar-brand{float:none;margin:0 auto}header .banner{padding:70px 0 65px}header .banner h4{font-size:180px}}@media all and (max-width:900px){.hotels h5{font-size:15px}}@media all and (max-width:660px){header .banner{padding:40px 0 30px}header .banner h4{font-size:100px}header .banner p{font-size:30px}header .banner #myModal .modal-dialog .modal-body{width:100%;margin-left:0;padding:30px}header .banner #myModal .modal-dialog .modal-body h6{font-size:50px;color:#093546;text-transform:none;margin-bottom:20px}header .banner #myModal .modal-dialog .modal-body p{font-size:18px;line-height:23px;color:#3f3f3f;margin-bottom:20px}header .banner #myModal .modal-dialog .modal-body form input{width:auto}header .banner #myModal .modal-dialog .modal-body form button{width:auto;background-color:#2391ed;text-transform:uppercase;font-size:20px;letter-spacing:3px;line-height:40px;color:#fff;text-align:center;padding:0 10px}header .banner #myModal .modal-content.dispatch{max-width:350px;height:auto}.news,.reviews{padding:40px 0 40px}.news .in-col,.reviews .in-col{height:auto}.hotels{padding:40px 0 40px}.hotels .h2{margin-bottom:30px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
